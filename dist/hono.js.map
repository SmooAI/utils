{"version":3,"sources":["../src/hono.ts","../src/env.ts"],"sourcesContent":["import { Hono } from 'hono';\nimport { HTTPException } from 'hono/http-exception';\nimport { ZodError } from 'zod';\nimport { fromZodError } from 'zod-validation-error';\nimport { logger as honoLogger } from 'hono/logger';\nimport { requestId } from 'hono/request-id';\nimport { prettyJSON } from 'hono/pretty-json';\nimport { handle, LambdaEvent, LambdaContext } from 'hono/aws-lambda';\nimport AwsLambdaLogger from '@smooai/logger/AwsLambdaLogger';\nimport { APIGatewayProxyEventV2, Context } from 'aws-lambda';\nimport { isRunningLocally } from './env';\n\nconst logger = new AwsLambdaLogger();\n\nexport function createAwsLambdaHonoApp(appFunction: (app: Hono) => Hono): ReturnType<typeof handle> {\n    const app = new Hono();\n\n    app.use(requestId());\n    app.use(\n        honoLogger((str, ...rest) => {\n            logger.info(str, ...rest);\n        }),\n    );\n    app.use(async (c, next) => {\n        logger.addContext({\n            honoRequestId: c.get('requestId'),\n        })\n        await next();\n    });\n    if (isRunningLocally()) {\n        app.use(prettyJSON());\n    }\n\n    app.onError((error) => {\n        if (error instanceof ZodError) {\n            const validationError = fromZodError(error);\n            logger.error(error, `A validation error occurred: ${validationError.toString()}`);\n            throw new HTTPException(400, {\n                cause: error,\n                message: validationError.toString(),\n            });\n        }\n        throw error;\n    });\n\n    const appWithRoutes = appFunction(app);\n    return (event: LambdaEvent, lambdaContext?: LambdaContext) => {\n        logger.addLambdaContext(event as unknown as APIGatewayProxyEventV2, lambdaContext as unknown as Context);\n        return handle(appWithRoutes)(event, lambdaContext);\n    };\n}\n","export function isRunningLocally(): boolean {\n    return !!process.env.SST_DEV;\n}\n\nexport function isRunningInProd(): boolean {\n    return process.env.SST_STAGE === 'prod';\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqB;AACrB,4BAA8B;AAC9B,iBAAyB;AACzB,kCAA6B;AAC7B,oBAAqC;AACrC,wBAA0B;AAC1B,yBAA2B;AAC3B,wBAAmD;AACnD,6BAA4B;;;ACRrB,SAAS,mBAA4B;AACxC,SAAO,CAAC,CAAC,QAAQ,IAAI;AACzB;;;ADUA,IAAM,SAAS,IAAI,uBAAAA,QAAgB;AAE5B,SAAS,uBAAuB,aAA6D;AAChG,QAAM,MAAM,IAAI,iBAAK;AAErB,MAAI,QAAI,6BAAU,CAAC;AACnB,MAAI;AAAA,QACA,cAAAC,QAAW,CAAC,QAAQ,SAAS;AACzB,aAAO,KAAK,KAAK,GAAG,IAAI;AAAA,IAC5B,CAAC;AAAA,EACL;AACA,MAAI,IAAI,OAAO,GAAG,SAAS;AACvB,WAAO,WAAW;AAAA,MACd,eAAe,EAAE,IAAI,WAAW;AAAA,IACpC,CAAC;AACD,UAAM,KAAK;AAAA,EACf,CAAC;AACD,MAAI,iBAAiB,GAAG;AACpB,QAAI,QAAI,+BAAW,CAAC;AAAA,EACxB;AAEA,MAAI,QAAQ,CAAC,UAAU;AACnB,QAAI,iBAAiB,qBAAU;AAC3B,YAAM,sBAAkB,0CAAa,KAAK;AAC1C,aAAO,MAAM,OAAO,gCAAgC,gBAAgB,SAAS,CAAC,EAAE;AAChF,YAAM,IAAI,oCAAc,KAAK;AAAA,QACzB,OAAO;AAAA,QACP,SAAS,gBAAgB,SAAS;AAAA,MACtC,CAAC;AAAA,IACL;AACA,UAAM;AAAA,EACV,CAAC;AAED,QAAM,gBAAgB,YAAY,GAAG;AACrC,SAAO,CAAC,OAAoB,kBAAkC;AAC1D,WAAO,iBAAiB,OAA4C,aAAmC;AACvG,eAAO,0BAAO,aAAa,EAAE,OAAO,aAAa;AAAA,EACrD;AACJ;","names":["AwsLambdaLogger","honoLogger"]}