{"version":3,"sources":["../src/env.ts"],"sourcesContent":["export enum Level {\n    Trace = 'trace',\n    Debug = 'debug',\n    Info = 'info',\n    Warn = 'warn',\n    Error = 'error',\n    Fatal = 'fatal',\n}\n\nexport const MAIN_ENVIRONMENTS = ['development', 'staging', 'production'];\n\nexport function getEnvironment(stage = process.env.SST_STAGE ?? 'local'): string {\n    if (process.env.IS_LOCAL) {\n        return 'local';\n    } else {\n        return stage;\n    }\n}\n\nexport function isBuild() {\n    return Boolean(process.env.GITHUB_ACTIONS || process.env.SEED_SERVICE_FULLPATH);\n}\n\nexport function isGithubActions() {\n    return Boolean(process.env.GITHUB_ACTIONS);\n}\n\nexport function isLocal(stage = process.env.SST_STAGE ?? 'local') {\n    return getEnvironment(stage) === 'local';\n}\n\nexport function isDevelopment(stage = process.env.SST_STAGE ?? 'local') {\n    return getEnvironment(stage) === 'development';\n}\n\nexport function isStaging(stage = process.env.SST_STAGE ?? 'local') {\n    return getEnvironment(stage) === 'staging';\n}\n\nexport function isProduction(stage = process.env.SST_STAGE ?? 'local') {\n    return getEnvironment(stage) === 'production';\n}\n\nfunction levelToCode(level: Level): number {\n    switch (level) {\n        case Level.Trace:\n            return 10;\n        case Level.Debug:\n            return 20;\n        case Level.Info:\n            return 30;\n        case Level.Warn:\n            return 40;\n        case Level.Error:\n            return 50;\n        case Level.Fatal:\n            return 60;\n        default:\n            return Number.POSITIVE_INFINITY;\n    }\n}\n\nexport function isLogLevelEnabled(limit: Level): boolean {\n    return levelToCode(limit) >= levelToCode((process.env.LOG_LEVEL as Level) ?? Level.Info);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAK,QAAL,kBAAKA,WAAL;AACH,EAAAA,OAAA,WAAQ;AACR,EAAAA,OAAA,WAAQ;AACR,EAAAA,OAAA,UAAO;AACP,EAAAA,OAAA,UAAO;AACP,EAAAA,OAAA,WAAQ;AACR,EAAAA,OAAA,WAAQ;AANA,SAAAA;AAAA,GAAA;AASL,IAAM,oBAAoB,CAAC,eAAe,WAAW,YAAY;AAEjE,SAAS,eAAe,QAAQ,QAAQ,IAAI,aAAa,SAAiB;AAC7E,MAAI,QAAQ,IAAI,UAAU;AACtB,WAAO;AAAA,EACX,OAAO;AACH,WAAO;AAAA,EACX;AACJ;AAEO,SAAS,UAAU;AACtB,SAAO,QAAQ,QAAQ,IAAI,kBAAkB,QAAQ,IAAI,qBAAqB;AAClF;AAEO,SAAS,kBAAkB;AAC9B,SAAO,QAAQ,QAAQ,IAAI,cAAc;AAC7C;AAEO,SAAS,QAAQ,QAAQ,QAAQ,IAAI,aAAa,SAAS;AAC9D,SAAO,eAAe,KAAK,MAAM;AACrC;AAEO,SAAS,cAAc,QAAQ,QAAQ,IAAI,aAAa,SAAS;AACpE,SAAO,eAAe,KAAK,MAAM;AACrC;AAEO,SAAS,UAAU,QAAQ,QAAQ,IAAI,aAAa,SAAS;AAChE,SAAO,eAAe,KAAK,MAAM;AACrC;AAEO,SAAS,aAAa,QAAQ,QAAQ,IAAI,aAAa,SAAS;AACnE,SAAO,eAAe,KAAK,MAAM;AACrC;AAEA,SAAS,YAAY,OAAsB;AACvC,UAAQ,OAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX;AACI,aAAO,OAAO;AAAA,EACtB;AACJ;AAEO,SAAS,kBAAkB,OAAuB;AACrD,SAAO,YAAY,KAAK,KAAK,YAAa,QAAQ,IAAI,aAAuB,iBAAU;AAC3F;","names":["Level"]}